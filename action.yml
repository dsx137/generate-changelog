name: "Generate Changelog From Previous Commits"
description: "Generate a changelog for the repository based on commit messages from the previous tag."
author: "dsx137"

branding:
  icon: "archive"
  color: "blue"

inputs:
  branch:
    description: "branch name"
    default: HEAD
  include:
    description: "regex"
    default: ".*"
  exclude:
    description: "regex"
    default: "(^$)."

outputs:
  changelog:
    description: "Generated changelog"
    value: ${{ steps.generate-changelog.outputs.changelog }}

runs:
  using: "composite"
  steps:
    - name: Git Fetch Unshallow
      shell: bash
      run: |
        git fetch --unshallow

    - name: Generate Changelog
      id: generate_changelog
      shell: bash
      env:
        BRANCH: ${{ inputs.branch }}
        INCLUDE: ${{ inputs.include }}
        EXCLUDE: ${{ inputs.exclude }}
      run: |
        function GENERATE_CHANGELOG(){
          local branch="$1"
          local include="$2"
          local exclude="$3"
          shift
          local grep_params=("$@")
          
          local tag="$(git --no-pager tag --sort=creatordate --merged "$branch" | grep -E "$include" | grep -vE "$exclude" | tail -1)"
          local limit="-1"
          if [ -n "$tag" ]; then
            limit="$tag..HEAD"
          fi
          local changelog="$(echo -ne "$(git log "$limit" --pretty=format:'- %s')")"
          changelog="$(echo -e "$changelog" | sed 's/$/  /')"
          echo "$changelog"
        }

        if [ -z "$BRANCH" ]; then
          echo "invalid params! use: xx.sh <branch> [include] [exclude]" >&2
          exit 1
        fi

        changelog="$(GENERATE_CHANGELOG "$BRANCH" "$INCLUDE" "$EXCLUDE")"
        {
            echo 'changelog<<EOF'
            echo "$changelog"
            echo 'EOF'
        } >> "$GITHUB_OUTPUT"
